SET xmloption = content;
CREATE TYPE public.days_of_week AS ENUM (
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
    'Sunday'
);
CREATE TABLE public.course (
    course_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    code text NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    value numeric,
    prerequisite_text text,
    preclusion_text text,
    corequisite_text text,
    term_id integer NOT NULL
);
COMMENT ON TABLE public.course IS 'Contains module/course data';
CREATE TABLE public.department (
    department_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    name text NOT NULL,
    term_id integer NOT NULL,
    school_id integer NOT NULL
);
COMMENT ON TABLE public.department IS 'Contains school department data';
CREATE TABLE public.lesson (
    lesson_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    starts_at timestamp with time zone NOT NULL,
    end_at timestamp with time zone NOT NULL,
    type text NOT NULL,
    day public.days_of_week NOT NULL,
    week text NOT NULL,
    code text NOT NULL,
    course_id integer NOT NULL,
    venue_id integer NOT NULL
);
COMMENT ON TABLE public.lesson IS 'Contains school lesson/recitation/lecture data';
CREATE TABLE public.school (
    school_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    long_name text NOT NULL,
    short_name text
);
COMMENT ON TABLE public.school IS 'Contains school metadata';
CREATE TABLE public.term (
    term_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    starts_at timestamp with time zone NOT NULL,
    ends_at timestamp with time zone NOT NULL,
    name text NOT NULL,
    school_id integer NOT NULL
);
COMMENT ON TABLE public.term IS 'Contains semester/term data';
CREATE TABLE public.venue (
    venue_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    code text NOT NULL,
    name text NOT NULL,
    latitude numeric,
    longitude numeric,
    altitude numeric,
    floor text,
    term_id integer NOT NULL,
    department_id integer NOT NULL,
    school_id integer NOT NULL
);
COMMENT ON TABLE public.venue IS 'Contains school venues data';
ALTER TABLE public.course ALTER COLUMN course_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.course_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.department ALTER COLUMN department_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.department_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.lesson ALTER COLUMN lesson_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.lesson_lesson_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.school ALTER COLUMN school_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.school_school_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.term ALTER COLUMN term_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.term_term_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.venue ALTER COLUMN venue_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.venue_venue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_pkey PRIMARY KEY (course_id);
ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_term_id_code_key UNIQUE (term_id, code);
ALTER TABLE ONLY public.department
    ADD CONSTRAINT department_pkey PRIMARY KEY (department_id);
ALTER TABLE ONLY public.department
    ADD CONSTRAINT department_term_id_name_key UNIQUE (term_id, name);
ALTER TABLE ONLY public.lesson
    ADD CONSTRAINT lesson_course_id_code_key UNIQUE (course_id, code);
ALTER TABLE ONLY public.lesson
    ADD CONSTRAINT lesson_pkey PRIMARY KEY (lesson_id);
ALTER TABLE ONLY public.school
    ADD CONSTRAINT school_long_name_key UNIQUE (long_name);
ALTER TABLE ONLY public.school
    ADD CONSTRAINT school_pkey PRIMARY KEY (school_id);
ALTER TABLE ONLY public.term
    ADD CONSTRAINT term_pkey PRIMARY KEY (term_id);
ALTER TABLE ONLY public.term
    ADD CONSTRAINT term_school_id_name_key UNIQUE (school_id, name);
ALTER TABLE ONLY public.venue
    ADD CONSTRAINT venue_pkey PRIMARY KEY (venue_id);
ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(term_id);
ALTER TABLE ONLY public.department
    ADD CONSTRAINT department_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.school(school_id);
ALTER TABLE ONLY public.department
    ADD CONSTRAINT department_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(term_id);
ALTER TABLE ONLY public.lesson
    ADD CONSTRAINT lesson_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(course_id);
ALTER TABLE ONLY public.lesson
    ADD CONSTRAINT lesson_venue_id_fkey FOREIGN KEY (venue_id) REFERENCES public.venue(venue_id);
ALTER TABLE ONLY public.term
    ADD CONSTRAINT term_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.school(school_id);
ALTER TABLE ONLY public.venue
    ADD CONSTRAINT venue_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.department(department_id);
ALTER TABLE ONLY public.venue
    ADD CONSTRAINT venue_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.school(school_id);
ALTER TABLE ONLY public.venue
    ADD CONSTRAINT venue_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(term_id);
